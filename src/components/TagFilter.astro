---
interface Props {
  tags: string[];
  selectedTag: string | null;
  baseUrl: string;
  title: string;
}

const { tags, selectedTag, baseUrl, title } = Astro.props;
---

<div class="mb-8">
  <div class="flex items-center gap-3 mb-4">
    <h2 class="text-lg font-semibold text-gray-900 dark:text-gray-100">
      {title}
    </h2>
    {selectedTag && (
      <a 
        href={baseUrl} 
        class="text-sm px-3 py-1 rounded-full bg-gray-100 text-gray-600 hover:bg-gray-200 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-gray-700 transition-colors"
      >
        Clear Tag
      </a>
    )}
  </div>
  <div class="flex flex-wrap gap-2">
    <a
      href={baseUrl}
      class={`text-sm px-3 py-1 rounded-full transition-colors ${
        !selectedTag
          ? 'bg-cyan-100 text-cyan-800 dark:bg-cyan-900 dark:text-cyan-100'
          : 'bg-gray-100 text-gray-600 hover:bg-gray-200 dark:bg-gray-800 dark:text-gray-300 dark:hover:bg-gray-700'
      }`}
    >
      All
    </a>
    {tags.map((tag) => (
      <a
        href={`${baseUrl}tag/${encodeURIComponent(tag)}`}
        class={`text-sm px-3 py-1 rounded-full transition-colors ${
          selectedTag === tag
            ? 'bg-cyan-100 text-cyan-800 dark:bg-cyan-900 dark:text-cyan-100'
            : 'bg-gray-100 text-gray-600 hover:bg-gray-200 dark:bg-gray-800 dark:text-gray-300 dark:hover:bg-gray-700'
        }`}
      >
        {tag}
      </a>
    ))}
  </div>
</div>
