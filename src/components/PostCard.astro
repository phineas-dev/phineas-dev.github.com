---
import FormattedDate from './FormattedDate.astro';
import type { Post } from '../content/types';
import TechIcon from './TechIcon.astro';
import { calculateReadTime } from '../utils/readTime';
import ProjectIcon from './ProjectIcon.astro';

interface Props {
  post: Post;
  baseUrl: string;
  variant?: 'default' | 'featured';
  color: string;
}

const {
  post,
  baseUrl,
  variant = 'default',
  color = 'linear-gradient(to right, #16a34a, #1d4ed8)',
} = Astro.props;
const { title, subtitle, pubDate } = post.data;
const Icon = post.collection === 'projects' ? ProjectIcon : TechIcon;

// Calculate read time based on description and title since we don't have access to full content here
const readTime = calculateReadTime(post.body);

const containerClasses = {
  default:
    'group block bg-white dark:bg-gray-950/50 rounded-lg p-4 md:p-6 h-full',
  featured:
    'group block bg-white dark:bg-gray-950/50 rounded-lg p-4 md:p-6 h-full',
}[variant];

const titleClasses = {
  default:
    'heading-3 m-0 text-gray-700 dark:text-gray-100 group-hover:text-cyan-600 dark:group-hover:text-cyan-300 transition-all duration-300',
  featured:
    'heading-2 text-gray-700 dark:text-gray-100 group-hover:text-cyan-600 dark:group-hover:text-cyan-300 transition-all duration-300',
}[variant];

const subtitleClasses = {
  default:
    'text-content-xs mt-[1px] text-gray-500 dark:text-gray-400 line-clamp-3',
  featured:
    'text-content-small md:text-content-secondary text-gray-500 dark:text-gray-400 line-clamp-3',
}[variant];

const descriptionClasses = {
  default: 'text-content-small text-gray-500 dark:text-gray-400 line-clamp-3',
  featured:
    'text-content-small md:text-content-secondary text-gray-500 dark:text-gray-400 line-clamp-4',
}[variant];
---

<a href={`${baseUrl}${post.slug}`} class={containerClasses}>
  <div class="space-y-2">
    <div class="flex mb-2 items-center">
      <Icon color={color} class={variant === 'featured' ? "h-12 w-12 mr-4 md:h-16 md:w-16" : "h-12 w-12 mr-3"} />
      <div>
        <h3 class={`${titleClasses}`}>
          {title}
        </h3>
        {subtitle && <p class={subtitleClasses}>{subtitle}</p>}
      </div>
    </div>    
    {(variant === 'default' || variant === 'featured' || variant === 'no-image') && 
      <p class={descriptionClasses}>{post.body.split('_')[1]}</p>
    }
    <div class="flex pt-2 items-center gap-2 text-content-xs text-gray-400 dark:text-gray-400">
      <FormattedDate date={pubDate} />
      {' | '}
      <div class="text-content-xs flex justify-end text-gray-500 dark:text-gray-400 items-center gap-1">
        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-4 h-4">
          <path stroke-linecap="round" stroke-linejoin="round" d="M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
        {readTime} min read
      </div>
    </div>
  </div>
</a>
