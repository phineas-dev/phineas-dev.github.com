---
import BlendedImage from './BlendedImage.astro';
import FormattedDate from './FormattedDate.astro';
import Tag from './Tag.astro';
import type { Post } from '../content/types';

interface Props {
  post: Post;
  baseUrl: string;
  variant?: 'default' | 'featured' | 'compact';
}

const { post, baseUrl, variant = 'default' } = Astro.props;
const { title, pubDate, description, tags } = post.data;

const containerClasses = {
  default: 'block',
  featured: 'mb-16',
  compact: '',
}[variant];

const titleClasses = {
  default:
    'font-semibold my-1 text-gray-900 dark:text-gray-100 group-hover:text-cyan-700 dark:group-hover:text-cyan-300 transition-colors',
  featured:
    'text-3xl font-bold mb-3 text-gray-900 dark:text-gray-100 group-hover:text-cyan-700 dark:group-hover:text-cyan-300 transition-colors',
  compact:
    'text-lg font-semibold m-0 leading-5 mb-4 group-hover:text-cyan-700 dark:group-hover:text-cyan-300 transition-colors',
}[variant];

const imageProps = {
  default: { aspectRatio: 30, hover: true },
  featured: { aspectRatio: 20, hover: true },
  compact: { hover: true },
}[variant];

const descriptionClasses = {
  default: 'text-gray-700 dark:text-gray-300 text-sm line-clamp-2',
  featured: 'text-gray-700 dark:text-gray-300 text-lg line-clamp-3',
  compact: '',
}[variant];
---

<div class={containerClasses}>
  <a href={`${baseUrl}${post.slug}`} class="group block no-underline">
    <div class="relative mb-3">
      <BlendedImage 
        slug={post.slug}
        title={title}
        rounded={true}
        {...imageProps}
      />
    </div>
    <div>
      <div class="text-sm text-gray-600 dark:text-gray-400 mb-2">
        <FormattedDate date={pubDate} />
      </div>
      <h2 class={titleClasses}>{title}</h2>
      {(variant === 'default' || variant === 'featured') && 
        <p class={descriptionClasses}>{description}</p>
      }     
    </div>
  </a>
  {tags && tags.length > 0 && (
    <div class="flex flex-wrap gap-2 mt-3">
      {tags.filter(tag => tag && tag.length > 0).map(tag => (
        <Tag tag={tag} baseUrl={baseUrl} />
      ))}
    </div>
  )}
</div>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
