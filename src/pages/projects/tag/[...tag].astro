---
import { getCollection } from 'astro:content';
import DefaultLayout from '../../../layouts/DefaultLayout.astro';
import PostCard from '../../../components/PostCard.astro';

export async function getStaticPaths() {
  const allPosts = await getCollection('projects');
  const allTags = [
    ...new Set(allPosts.flatMap((post) => post.data.tags)),
  ].sort();

  return allTags.map((tag) => ({
    params: { tag },
    props: { tag },
  }));
}

// Get all posts and sort by date
const allPosts = (await getCollection('projects')).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

// Count posts per tag and only include tags with more than one post
const tagCounts = allPosts
  .flatMap((post) => post.data.tags)
  .reduce(
    (acc, tag) => {
      acc[tag] = (acc[tag] || 0) + 1;
      return acc;
    },
    {} as Record<string, number>,
  );

// Only include tags with more than one post
const validTags = Object.entries(tagCounts)
  .map(([tag]) => tag)
  .sort();

// Get unique tags from all posts
const allTags = [...new Set(allPosts.flatMap((post) => post.data.tags))].sort();

// Get tag from URL
const { tag = '' } = Astro.props;

// Filter posts by tag
const filteredPosts = allPosts.filter((post) => post.data.tags.includes(tag));

// Split into featured and other posts
const [featuredPost, ...otherPosts] = filteredPosts;
---

<DefaultLayout 
  title="Projects"
  description={`Articles about ${tag.toLowerCase()} and related topics`}
  slug='projects'
  showArt={true}
>
  <section class="max-w-4xl mx-auto">    
    <div class="flex items-center gap-3 mb-8">
      <h2 class="heading-2 text-gray-900 dark:text-gray-100">
        Projects tagged "{tag}"
      </h2>
      <a 
        href="/projects" 
        class="text-sm px-3 py-1 rounded-full bg-gray-100 text-gray-600 hover:bg-gray-200 dark:bg-gray-800 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white transition-colors group"
      >
        Clear Filter <span class="ml-1 group-hover:bg-gray-300 dark:group-hover:bg-gray-500 group-hover:rounded-full group-hover:px-1.5 transition-all">Ã—</span>
      </a>
    </div>

    {featuredPost && (
      <div class="mb-16">
        <PostCard post={featuredPost} variant='featured' baseUrl='/projects/' color={featuredPost.data.color} />
      </div>
    )}

    <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
      {otherPosts.map((post) => (
        <PostCard post={post} baseUrl='/projects/' color={post.data.color}/>
      ))}
    </div>
  </section>
</DefaultLayout>
