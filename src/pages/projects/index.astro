---
import { getCollection } from 'astro:content';
import PostCard from '../../components/PostCard.astro';
import DefaultLayout from '../../layouts/DefaultLayout.astro';
import TagFilter from '../../components/TagFilter.astro';

// Get all posts and sort by date
const allPosts = (await getCollection('projects')).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

// Count posts per tag and only include tags with more than one post
const tagCounts = allPosts
  .flatMap((post) => post.data.tags)
  .reduce(
    (acc, tag) => {
      acc[tag] = (acc[tag] || 0) + 1;
      return acc;
    },
    {} as Record<string, number>,
  );

const allTags = Object.entries(tagCounts)
  .map(([tag]) => tag)
  .sort();

const [featuredPost, ...otherPosts] = allPosts;
---

<DefaultLayout 
  title="Projects" 
  description="A showcase of my latest projects and work"
>
  <section class="max-w-4xl mx-auto">
    <div class="mb-24">
      <div class="text-[1.125rem] max-w-3xl">
        <p class="text-gray-700 dark:text-gray-300 mb-6 leading-[1.75] tracking-[-0.01em]">
          A curated portfolio showcasing my work in frontend development, 
          user experience design, and software architecture. 
          From high-traffic web applications to 
          innovative side projects.
        </p>
      </div>
    </div>

    {featuredPost && (
      <div class="mb-24">
        <h2 class="text-[1.75rem] font-bold text-gray-900 dark:text-gray-100 tracking-tight mb-8">Featured Project</h2>
        <PostCard post={featuredPost} variant="featured" baseUrl='/projects/'/>
      </div>
    )}

    <div class="mb-8">
      <h2 class="text-[1.75rem] font-bold text-gray-900 dark:text-gray-100 tracking-tight mb-8">More Projects</h2>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8 md:gap-16">
        {otherPosts.map((post) => (
          <PostCard post={post} variant="default" baseUrl='/projects/'/>
        ))}
      </div>
    </div>
  </section>
</DefaultLayout>
